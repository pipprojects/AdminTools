#!/bin/ksh
#
#*****************************************************************************
#
# Name          Description                     Version Date
#
# Rob Dancer    Initial version			1.0     11 Nov 1997
#
# Rob Dancer    Changed "Exit OK" to "Exit"	1.1     17 Nov 1997
#
# Rob Dancer    Set return status correctly	1.2     18 Nov 1997
#
# Rob Dancer    References amended to           2.0     01 Dec 1997
#               "admintools"
#
# Rob Dancer    Changed spelling mistake	2.1     10 Dec 1997
#		"exits"
#
# Rob Dancer    Exit with variable not		2.2     18 Dec 1997
#		explicitly 0 when showing
#		version
#
# Rob Dancer    mirmerge created		2.3     19 Dec 1997
#
VERSION="2.3, 19 Dec 1997"
#
#*****************************************************************************
#
# Exit function
#
function _exit {
 exit $1
}
#
# Main function
#
function _Main {
#
# Insert user function here
#
if [ "$MERGE" = "TRUE" ]
then
 echo "MERGING MIRRORS - press return to continue"
 read KEY
 echo "OK, MERGING"
 sleep 2
else
 echo "NOT MERGING, ONLY SHOWING WHAT WILL BE DONE"
fi
#
# Find all volume groups
#
files=`find /dev -type b | grep "/dev/vg"`
#
# Get list of mirrored LVs
#
MIRLIST=""
for file in $files
do
 MIR="${file}b"
 if [ -b $MIR ]
 then
  MIRLIST="$MIRLIST $file"
 fi
done
#
# Loop round all mirrors
#
for mirror in $MIRLIST
do
 if [ "$MERGE" = "TRUE" ]
 then
  echo "Merging ${mirror}b with ${mirror}"
  lvmerge ${mirror}b ${mirror}
  lvlnboot -R
 else
  echo "lvmerge ${mirror}b ${mirror}"
 fi
done
#
# Set up return status
#
 RETSTAT=0
}
#
# Start here
#
#
# Source setup file
#
. /etc/admintools.src
SHOWVERSION="FALSE"
#
# Set up user variables
#
MERGE="FALSE"
#
# Initialise exit status
#
let "EXITSTAT=0"
#
# Get command line options
#
USAGE="$0 [-a] [-V Version]"
set -- `getopt aV $*`
if [ $? -ne 0 ]
then
 echo $USAGE
_exit 2
fi
while [ $# -gt 0 ]
do
 case $1 in
#
# Option
#
	-a)
		MERGE="TRUE"
		shift 1
	;;
#
# Show version
#
	-V)
		SHOWVERSION="TRUE"
		shift 1
	;;
	--)
		shift
		break
	;;
 esac
done
#
# Check for show version
#
if [ "$SHOWVERSION" = "TRUE" ]
then
 echo "$VERSION"
 echo "$USAGE"
 _exit $EXITSTAT
fi
#
# Do Main
#
_Main
let "EXITSTAT=EXITSTAT+RETSTAT"
#
# Exit
#
_exit $EXITSTAT
#
