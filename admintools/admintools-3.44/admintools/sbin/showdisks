#!/bin/ksh
#
#*****************************************************************************
#
# Name          Description                     Version Date
#
# Rob Dancer    Initial version			1.0     11 Nov 1997
#
# Rob Dancer    Added version numbers		1.1     14 Nov 1997
#
# Rob Dancer    References amended to           2.0     01 Dec 1997
#               "admintools"
#
VERSION="2.0, 01 Dec 1997"
#
#*****************************************************************************
#
# Exit function
#
function _exit {
 exit $1
}
#
# Main function
#
function _Main {
#
# Insert user function here
#
#
echo "HW-ADDRESS DEVICE-FILE LOGICAL_VOLUME HW-DESCRIPTION SIZE(MB) MOUNT-POINT LV-SIZE(MB) FS-TYPE NUMBER-OF-MIRRORS"
#
for lv_id in `cat iolv.db | grep -v "^#" | cut -d "," -f1`
do
 lv=`cat iolv.db | awk -F "," -v LVID=$lv_id '{if ($1 == LVID) print $2}'`
 disk_ids=`cat iolvpv.db | awk -F "," -v LVID=$lv_id '{if ($2 == LVID) print $3}'`
 for disk_id in $disk_ids
 do
  disk=`cat iodsk.db | awk -F "," -v DISKID=$disk_id '{if ($1 == DISKID) print $2}'`
  scsidev_id=`cat iodsk.db | awk -F "," -v DISKID=$disk_id '{if ($1 == DISKID) print $4}'`
  scsidev=`cat iodisk.db | awk -F "," -v SCSIID=$scsidev_id '{if ($1 == SCSIID) print $2}'`
  scsidesc=`cat iodisk.db | awk -F "," -v SCSIID=$scsidev_id '{if ($1 == SCSIID) print $3}'`
  scsisize=`cat iodisk.db | awk -F "," -v SCSIID=$scsidev_id '{if ($1 == SCSIID) print $4}'`
  lvsize=`cat iolvpv.db | awk -F "," -v LVID=$lv_id -v DISKID=$disk_id '{if ($2 == LVID && $3 == DISKID) print $4}'`
  mountp=`cat iolv.db | awk -F "," -v LVID=$lv_id '{if ($1 == LVID) print $3}'`
  nmirror=`cat iolv.db | awk -F "," -v LVID=$lv_id '{if ($1 == LVID) print $4}'`
  fstype=`cat iolv.db | awk -F "," -v LVID=$lv_id '{if ($1 == LVID) print $5}'`
#
  echo "$scsidev , $disk , $lv , $scsidesc , ${scsisize}MB , $mountp , ${lvsize}MB , $fstype , $nmirror"
#
 done
#
done

 RETSTAT=0
}

#
# Start here
#
#
# Source setup file
#
. /etc/admintools.src
SHOWVERSION="FALSE"
#
# Set up user variables
#
OPTION=""
#
# Initialise exits status
#
let "EXITSTAT=0"
#
# Get command line options
#
USAGE="$0 [-V Version]"
set -- `getopt V $*`
if [ $? -ne 0 ]
then
 echo $USAGE
_exit 2
fi
while [ $# -gt 0 ]
do
 case $1 in
#
# Show version
#
	-V)
		SHOWVERSION="TRUE"
		shift 1
	;;
	--)
		shift
		break
	;;
 esac
done
#
# Check for show version
#
if [ "$SHOWVERSION" = "TRUE" ]
then
 echo "$VERSION"
 echo "$USAGE"
 _exit 0
fi
#
# Do Main
#
_Main
let "EXITSTAT=EXITSTAT+RETSTAT"
#
# Exit OK
#
_exit $EXITSTAT
#
