#!/bin/ksh
#
#*****************************************************************************
#
# Name          Description                     Version Date
#
# Rob Dancer    Initial version			1.0     11 Nov 1997
#
# Rob Dancer    Changed "Exit OK" to "Exit"	1.1     17 Nov 1997
#
# Rob Dancer    Set return status correctly	1.2     18 Nov 1997
#
# Rob Dancer    References amended to           2.0     01 Dec 1997
#               "admintools"
#
# Rob Dancer    Changed spelling mistake	2.1     10 Dec 1997
#		"exits"
#
# Rob Dancer    Exit with variable not		2.2     18 Dec 1997
#		explicitly 0 when showing
#		version
#
# Rob Dancer    Add default -f FILE option	2.3     22 Apr 1998
#
# Rob Dancer    Change getopt to getopts	2.4     23 Apr 1998
#
# Rob Dancer	convxlprofile			3.0	03 Jun 1998
#
# Rob Dancer	No output if null $1 or $2	3.1	04 Jun 1998
#
VERSION="3.1, 04 Jun 1998"
#
#*****************************************************************************
#
# Exit function
#
function _exit {
 exit $1
}
#
# Main function
#
function _Main {
#
# Insert user function here
#
TIMEFILE="/tmp/tmpfile1.$$"
SCFILE="/tmp/tmpfile2.$$"
IPFILE="/tmp/tmpfile3.$$"
#
cat $INFILE | $AWK -F "	" 'BEGIN{
			 SCPROC="FALSE"
			 IPPROC="FALSE"
			 TIMEFILE="'"$TIMEFILE"'"
			 SCFILE="'"$SCFILE"'"
			 IPFILE="'"$IPFILE"'"
			} {
			 if ( $1 == "Workitems Scheduled" ) {
			   SCPROC="TRUE"
			   IPPROC="FALSE"
			 } else {
			  if ( $1 == "Workitems In Progress" ) {
			   SCPROC="FALSE"
			   IPPROC="TRUE"
			  } else {
			   if ( $1 == "" ) {
			    SCPROC="FALSE"
			    IPPROC="FALSE"
			   } else {
			    if ( NF == 0 ) {
			     SCPROC="FALSE"
			     IPPROC="FALSE"
			    } else {
			     if ( SCPROC == "TRUE" ) {
			      TIME=$1
			      print TIME > TIMEFILE
			      SCOUT=$2","$3
			      print SCOUT > SCFILE
			     }
			     if ( IPPROC == "TRUE" ) {
			      IPOUT=$2","$3
			      print IPOUT > IPFILE
			     }
			    }
			   }
			  }
			 }
			}'
#
paste $TIMEFILE $SCFILE $IPFILE | sed -e s/"	"/","/g
#
rm $TIMEFILE
rm $SCFILE
rm $IPFILE
#
#
# Set up return status
#
 RETSTAT=0
}
#
# Start here
#
#
# Source setup file
#
. /etc/admintools.src
SHOWVERSION="FALSE"
#
# Set up user variables
#
INFILE="-"
#
# Initialise exit status
#
let "EXITSTAT=0"
#
# Get command line options
#
USAGE="$0 [-f file] [-V Version]"
while getopts f:V OPT
do
 case $OPT in
#
# Invalid option
#
        \?)
                if [ -z "$OPTARG" ]
                then
                 echo $USAGE
                 _exit 2
                fi
        ;;
#
# Infile
#
	f)
		INFILE=$OPTARG
	;;
#
# Show version
#
	V)
		SHOWVERSION="TRUE"
	;;
 esac
done
#
# Check for show version
#
if [ "$SHOWVERSION" = "TRUE" ]
then
 echo "$VERSION"
 echo "$USAGE"
 _exit $EXITSTAT
fi
#
# Check bounds of INFILE
#
if [ -z "$INFILE" ]
then
 echo "ERROR : Filename required"
 echo "$USAGE"
 EXITSTAT=2
 _exit $EXITSTAT
else
 if [ $INFILE != "-" ]
 then
  if [ ! -r "$INFILE" ]
  then
   echo "ERROR : File $INFILE does not exist or cannot be opened"
   EXITSTAT=3
   _exit $EXITSTAT
  fi
 fi
fi
#
# Do Main
#
_Main
let "EXITSTAT=EXITSTAT+RETSTAT"
#
# Exit
#
_exit $EXITSTAT
#
