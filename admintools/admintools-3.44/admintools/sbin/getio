#!/bin/ksh
#
#*****************************************************************************
#
# Name          Description                     Version Date
#
# Rob Dancer    Initial version			1.0     11 Nov 1997
#
# Rob Dancer    Added version number		1.1     14 Nov 1997
#
# Rob Dancer    References amended to           2.0     01 Dec 1997
#               "admintools"
#
VERSION="2.0, 01 Dec 1997"
#
#*****************************************************************************
#
# Exit function
#
function _exit {
 exit $1
}
get_hw_rel_id (){
 echo "Get disk id"
 getdskid > iodsk.db
 echo "Get logical volume id"
 getlvid > iolv.db
 echo "Get lv/disk relation id"
 getlvpvid > iolvpv.db
 echo "Get tape relation id"
 gettpeid > iotpe.db
}

get_hw_id () {
 export HPUXVER=`uname -r | cut -d "." -f2`
 for entry in `ioscan -fk | egrep -v "Class|====" | awk '{print $1}' | sort -u`
 do
  echo "$entry"
  EXEC_FILE="get${entry}id"
  DEST_FILE="io${entry}.db"
  EXISTS=`which ${EXEC_FILE} | awk '{print $1" "$2}'`
  if [ "$EXISTS" != "no ${EXEC_FILE}" ]
  then
   $EXEC_FILE > $DEST_FILE
  else
   getDEFAULTid $entry > $DEST_FILE
  fi
 done
}
#
# Main function
#
function _Main {
#
# Insert user function here
#
 get_hw_id
 get_hw_rel_id
#
 RETSTAT=0
}

#
# Start here
#
#
# Source setup file
#
. /etc/admintools.src
SHOWVERSION="FALSE"
#
# Set up user variables
#
OPTION=""
#
# Initialise exits status
#
let "EXITSTAT=0"
#
# Get command line options
#
USAGE="$0 [-V Version]"
set -- `getopt o:V $*`
if [ $? -ne 0 ]
then
 echo $USAGE
_exit 2
fi
while [ $# -gt 0 ]
do
 case $1 in
#
# Show version
#
	-V)
		SHOWVERSION="TRUE"
		shift 1
	;;
	--)
		shift
		break
	;;
 esac
done
#
# Check for show version
#
if [ "$SHOWVERSION" = "TRUE" ]
then
 echo "$VERSION"
 echo "$USAGE"
 _exit 0
fi
#
# Do Main
#
_Main
let "EXITSTAT=EXITSTAT+RETSTAT"
#
# Exit OK
#
_exit $EXITSTAT
#
