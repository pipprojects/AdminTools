#!/bin/ksh
#
#*****************************************************************************
#
# Name          Description                     Version Date
#
# Rob Dancer    Initial version			1.0     11 Nov 1997
#
# Rob Dancer    Changed "Exit OK" to "Exit"	1.1     17 Nov 1997
#
# Rob Dancer    Set return status correctly	1.2     18 Nov 1997
#
# Rob Dancer    References amended to           2.0     01 Dec 1997
#               "admintools"
#
# Rob Dancer    Changed spelling mistake	2.1     10 Dec 1997
#		"exits"
#
# Rob Dancer    Exit with variable not		2.2     18 Dec 1997
#		explicitly 0 when showing
#		version
#
# Rob Dancer    Add default -f FILE option	2.3     22 Apr 1998
#
# Rob Dancer    Change getopt to getopts	2.4     23 Apr 1998
#
# Rob Dancer    doitemreport			3.0     27 Apr 1998
#
# Rob Dancer    Min and max days		3.1     27 Apr 1998
#
# Rob Dancer    caljul changed 			3.2     29 Apr 1998
#
# Rob Dancer    awk changed for $AWK		3.3     11 May 1998
#
VERSION="3.3, 11 May 1998"
#
#*****************************************************************************
#
# Exit function
#
function _exit {
 exit $1
}
#
# Main function
#
function _Main {
#
# Insert user function here
#
 DAY="`date '+%d'`"
 MONTH="`date '+%m'`"
 YEAR="`date '+%Y'`"
 YEARSH="`date '+%y'`"
 DATE="`date '+%d/%m/%Y'`"
 let "NUM=`caljul -d "$DATE" | $AWK '{print $1}'`-NUMBACK"
 DATESTART=`caljul -j "$NUM $YEAR" | $AWK -F "/" '{print $1"/"$2"/"substr($3,3,2)}'`
 TIMESTART="06:00:00"
 DATESTOP="${DAY}/${MONTH}/${YEARSH}"
 TIMESTOP="06:00:00"
#
# Get a list of all the backup log files
#
 listlogs -a $DATESTART -d $LOGDIR -l $LOGFILE > $TMPFILE1
#
# Generate and format logs
#
 genlogrep -a "$DATESTART $TIMESTART" -b "$DATESTOP $TIMESTOP" \
	 -l $TMPFILE1 | procglr | itemreport > $TMPFILE2
#
# Record logs
#
cat $TMPFILE2 >> $LOGALL
cat $TMPFILE2 | head -1 > $TMPFILE1
cat $LOGALL | grep -v "^Server," | sort -u >> $TMPFILE1
cp $TMPFILE1 $LOGALL
#
# Mail or print to screen
#
 if [ "$MAILTO" = "YES" ]
 then
  echo "Subject: $LOGOUT backup report" | cat - $LOGALL | mail $MAILREC
 else
  eval cat $TMPFILE2 >${LOGOUT}
 fi
#
# Remove temporary files
#
 if [ -f "$TMPFILE1" ]
 then
  rm $TMPFILE1
 fi
 if [ -f "$TMPFILE2" ]
 then
  rm $TMPFILE2
 fi
#
# Set up return status
#
 RETSTAT=0
}
#
# Start here
#
#
# Source setup file
#
. /etc/admintools.src
SHOWVERSION="FALSE"
#
# Set up user variables
#
MAILFILE="${LOCALETC}/mailto.cfg"
MAILTO="NO"
NUMBACK=1
LOGOUT=""
DAYMIN=1
DAYMAX=100
TMPFILE1="/tmp/tmpfile1.$$"
TMPFILE2="/tmp/tmpfile2.$$"
LOGDIR="/ep_home/epoch/EB/log"
LOGFILE="backups.log"
LOGALL="/usr/local/etc/edmall.log"
#
# Initialise exit status
#
let "EXITSTAT=0"
#
# Get command line options
#
USAGE="$0 [-n days] [-l logfile] [-f all_logfile] [-t mail_list_file] [-m y|n] [-V Version]"
while getopts n:l:f:t:m:V OPT
do
 case $OPT in
#
# Invalid option
#
        \?)
                if [ -z "$OPTARG" ]
                then
                 echo $USAGE
                 _exit 2
                fi
        ;;
#
# Number of days
#
	n)
		NUMBACK=$OPTARG
	;;
#
# Log file
#
	l)
		LOGOUT=$OPTARG
	;;
#
# All logs file
#
	f)
		LOGALL=$OPTARG
	;;
#
# Mailfile
#
	t)
		MAILFILE=$OPTARG
	;;
#
# Mail or not
#
	m)
		MAILTO=$OPTARG
	;;
#
# Show version
#
	V)
		SHOWVERSION="TRUE"
	;;
 esac
done
#
# Check for show version
#
if [ "$SHOWVERSION" = "TRUE" ]
then
 echo "$VERSION"
 echo "$USAGE"
 _exit $EXITSTAT
fi
#
# Check bounds of NUMBACK
#
if [ "$NUMBACK" -lt "$DAYMIN" -o "$NUMBACK" -gt "$DAYMAX" ]
then
 echo "ERROR : Invalid number of days - $NUMBACK (${DAYMIN} to ${DAYMAX})"
 _exit 1
fi
#
# Set up mail receipients
#
if [ -r ${MAILFILE} ]
then
 MAILREC="`cat $MAILFILE | grep -v "^#"`"
else
 MAILREC="root@localhost"
fi
#
# Check if mailing or printing to screen
#
if [ "$MAILTO" != "NO" ]
then
 TMPM=`echo $MAILTO | $AWK '{print toupper($0)}'`
 case $TMPM in
	Y|YES)
		MAILTO="YES"
	;;
	N|NO)
		MAILTO="NO"
	;;
	*)
		echo "ERROR : Invalid parameter to mailto (-m)"
		echo $USAGE
		EXITSTATUS=4
		_exit $EXITSTATUS
	;;
 esac
fi
#
# Do Main
#
_Main
let "EXITSTAT=EXITSTAT+RETSTAT"
#
# Exit
#
_exit $EXITSTAT
#
